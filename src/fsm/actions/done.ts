import { fsmStore } from "../store";
import { FSMAction } from "../types";
import env from "../../config/env";
import { hideKeyboard } from "../../utils/hideKeyboard";

export const done: FSMAction = {
  onEnter: async (chatId, ctx) => {
    await fsmStore.update(chatId, { step: "done" });
  },
  onAction: async (chatId, ctx, action) => {
    if (action === "get_guide") {
      // Answer callback query to remove loading indicator
      await ctx.answerCbQuery();
      await hideKeyboard(ctx);

      const state = await fsmStore.get(chatId);
      if (state?.guideHash) {
        // TODO: link change id to hash
        await ctx.reply(`üîó ${env.STRAPI_HOST}/guide/${state.guideHash}`);
        await ctx.reply(
          "–¢—ã –º–æ–∂–µ—à—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –µ–≥–æ, —Ä–∞—Å–ø–µ—á–∞—Ç–∞—Ç—å –∏–ª–∏ –æ—Ç–∫—Ä—ã—Ç—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç. –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è! üåç"
        );
      } else {
        await ctx.reply(
          "‚ùå –ò–∑–≤–∏–Ω–∏—Ç–µ, –≥–∏–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –≥–∏–¥."
        );
      }
      await fsmStore.update(chatId, { step: "start" });
    }
  },
};
